// Auto-generated by Java-to-Swift wrapper generator.
import JavaRuntime

@JavaClass("java.util.Optional")
public struct JavaOptional<T: AnyJavaObject> {
  @JavaMethod
  public func get() -> JavaObject?

  @JavaMethod
  public func equals(_ arg0: JavaObject?) -> Bool

  @JavaMethod
  public func toString() -> String

  @JavaMethod
  public func hashCode() -> Int32

  @JavaMethod
  public func isEmpty() -> Bool

  @JavaMethod
  public func isPresent() -> Bool

  @JavaMethod
  public func orElse(_ arg0: JavaObject?) -> JavaObject?

  @JavaMethod
  public func orElseThrow() -> JavaObject?

  @JavaMethod
  public func getClass() -> JavaClass<JavaObject>?

  @JavaMethod
  public func notify()

  @JavaMethod
  public func notifyAll()

  @JavaMethod
  public func wait(_ arg0: Int64) throws

  @JavaMethod
  public func wait(_ arg0: Int64, _ arg1: Int32) throws

  @JavaMethod
  public func wait() throws
}
extension JavaClass {
  @JavaStaticMethod
  public func of<T: AnyJavaObject>(_ arg0: JavaObject?) -> JavaOptional<JavaObject>? where ObjectType == JavaOptional<T>

  @JavaStaticMethod
  public func empty<T: AnyJavaObject>() -> JavaOptional<JavaObject>? where ObjectType == JavaOptional<T>

  @JavaStaticMethod
  public func ofNullable<T: AnyJavaObject>(_ arg0: JavaObject?) -> JavaOptional<JavaObject>? where ObjectType == JavaOptional<T>
}
